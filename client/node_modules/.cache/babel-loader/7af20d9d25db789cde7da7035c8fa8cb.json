{"ast":null,"code":"var _jsxFileName = \"/home/emjackson/Memories_App/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core'; //import { useNavigate } from 'react-router-dom';\n\nimport GoogleLogin from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Icon from './icon'; //import { signin, signup } from '../../actions/auth';\n//import { AUTH } from '../../constants/actionTypes';\n\nimport useStyles from './styles';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  //const initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignUp] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const dispatch = useDispatch(); //const navigate = useNavigate();\n\n  const classes = useStyles();\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignUp(prevIsSignUp => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n  /** \n  const googleSuccess = async (res) => {\n      const result = res?.profileObj;\n      const token = res?.tokenId;\n  \n      try {\n        dispatch({ type: \"AUTH\", data: { result, token } });\n  \n        navigate('/');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  \n      const handleFailure = (error) => {\n          console.log(error)\n          console.log('Google Sign In Was unsucessful. Try Again Later')\n      }\n  */\n\n\n  const handleFailure = error => {\n    console.log(error);\n  };\n\n  const handleLogin = googleData => {\n    console.log(googleData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: isSignup ? 'Sign up' : 'Sign in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          buttonText: \"Continue with Google\",\n          onSuccess: handleLogin,\n          onFailure: handleFailure,\n          cookiePolicy: 'single_host_origin' //clientId=\"379115582650-mhks1bttv1issid9lmsv7hrjor79bci9.apps.googleusercontent.com\"\n          //onSuccess={googleSuccess}\n          //onFailure={googleFailure}\n          //cookiePolicy=\"single_host_origin\"\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}; //https://stackoverflow.com/questions/43964539/google-api-not-a-valid-origin-for-the-client-url-has-not-been-whitelisted-for/45761277#45761277\n//\"You have created a new client application that uses libraries for user authentication or authorization that will soon be deprecated. \n//New clients must use the new libraries instead; existing clients must also migrate before these libraries are deprecated. \n//See the [Migration Guide](https://developers.google.com/identity/gsi/web/guides/gis-migration) for more information.\"\n//https://www.youtube.com/watch?v=75aTZq-qoZk\n\n\n_s(Auth, \"9R5uYSsGSxdKI38xtF38Mp1+/W8=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","LockOutlinedIcon","Icon","useStyles","Input","Auth","showPassword","setShowPassword","isSignup","setIsSignUp","handleShowPassword","prevShowPassword","dispatch","classes","handleSubmit","handleChange","switchMode","prevIsSignUp","handleFailure","error","console","log","handleLogin","googleData","paper","avatar","form","submit","process","env","REACT_APP_GOOGLE_CLIENT_ID"],"sources":["/home/emjackson/Memories_App/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\n//import { useNavigate } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './icon';\n//import { signin, signup } from '../../actions/auth';\n//import { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\nconst Auth = () => {\n\n//const initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\nconst [showPassword, setShowPassword] = useState(false)\nconst [isSignup, setIsSignUp] = useState(false)\nconst handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword)\nconst dispatch = useDispatch();\n//const navigate = useNavigate();\nconst classes = useStyles();\nconst handleSubmit = () => {\n\n}\n\nconst handleChange = () => {\n\n}\n\nconst switchMode = () => {\n    setIsSignUp((prevIsSignUp) => !prevIsSignUp)\n    handleShowPassword(false)\n}\n\n/** \nconst googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: \"AUTH\", data: { result, token } });\n\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n    const handleFailure = (error) => {\n        console.log(error)\n        console.log('Google Sign In Was unsucessful. Try Again Later')\n    }\n*/\n\n    const handleFailure = (error) => {\n        console.log(error)\n    }\n\n    const handleLogin = (googleData) => {\n        console.log(googleData)\n    }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n            buttonText=\"Continue with Google\"\n            onSuccess={handleLogin}\n            onFailure={handleFailure}\n            cookiePolicy={'single_host_origin'}\n            //clientId=\"379115582650-mhks1bttv1issid9lmsv7hrjor79bci9.apps.googleusercontent.com\"\n            //onSuccess={googleSuccess}\n            //onFailure={googleFailure}\n            //cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  )\n};\n\n//https://stackoverflow.com/questions/43964539/google-api-not-a-valid-origin-for-the-client-url-has-not-been-whitelisted-for/45761277#45761277\n\n//\"You have created a new client application that uses libraries for user authentication or authorization that will soon be deprecated. \n//New clients must use the new libraries instead; existing clients must also migrate before these libraries are deprecated. \n//See the [Migration Guide](https://developers.google.com/identity/gsi/web/guides/gis-migration) for more information.\"\n//https://www.youtube.com/watch?v=75aTZq-qoZk\n\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}