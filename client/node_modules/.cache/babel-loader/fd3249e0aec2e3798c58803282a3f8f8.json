{"ast":null,"code":"var _jsxFileName = \"/home/emjackson/Memories_App/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@mui/material';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useDispatch, useSelector } from 'react-redux'; //To update, we need to get the current id\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(_ref) {\n  _s();\n\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"p\",\n        align: \"center\",\n        children: \"Please sign in to unlock new privileges like creating and liking memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? `Editing` : `Creating`, \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"iJASk5RY4vkdvp/+p0ZlhILKUNA=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","createPost","updatePost","useDispatch","useSelector","Form","currentId","setCurrentId","post","state","posts","find","p","_id","user","JSON","parse","localStorage","getItem","postData","setPostData","title","message","tags","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["/home/emjackson/Memories_App/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TextField, Button, Typography, Paper } from '@mui/material'\nimport FileBase from 'react-file-base64'\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts'\nimport { useDispatch, useSelector } from 'react-redux'\n\n//To update, we need to get the current id\n\nfunction Form({ currentId, setCurrentId }) {\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null)\n    const user = JSON.parse(localStorage.getItem('profile'))\n    const [postData, setPostData] = useState({\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: ''\n    })\n    const classes = useStyles();\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n      if (post) setPostData(post)\n    }, [post])\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if(currentId === 0) {\n            dispatch(createPost({ ...postData, name: user?.result?.name }))\n            clear()\n        } else {\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }))\n            clear()\n        }\n    }\n\n    const clear = () => {\n       setCurrentId(null)\n       setPostData({ title: '', message: '', tags: '', selectedFile: '' }) \n    }\n\n\n    if(!user?.result?.name) {\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant='p' align='center'>\n                    Please sign in to unlock new privileges like creating and liking memories \n                </Typography>\n            </Paper>\n        )\n    }\n\n  return (\n    <Paper className={classes.paper}>\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n            <Typography variant='h6'>{currentId ? `Editing` : `Creating`} a Memory</Typography>\n            <TextField name=\"title\" variant='outlined' label='Title' fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n            <TextField name=\"message\" variant='outlined' label='Message' fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })}/>\n            <TextField name=\"tags\" variant='outlined' label='Tags' fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}/>\n            <div className={classes.fileInput}><FileBase type='file' multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n            <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth>Submit</Button>\n            <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth>Clear</Button>\n        </form>\n    </Paper>\n  )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module"}