{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_SEARCH, FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPost(id);\n    console.log(data);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_SEARCH,\n      payload: {\n        data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const {\n      data\n    } = await api.likePost(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_SEARCH","FETCH_ALL","FETCH_POST","CREATE","UPDATE","DELETE","api","getPost","id","dispatch","data","fetchPost","console","log","type","payload","error","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","likePost","user","JSON","parse","localStorage","getItem","token","deletePost"],"sources":["/home/emjackson/Memories_App/client/src/actions/posts.js"],"sourcesContent":["import { START_LOADING, END_LOADING, FETCH_SEARCH, FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPost(id);\n\n    console.log(data)\n\n    dispatch({ type: FETCH_POST, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n\n    dispatch({ type: START_LOADING })\n    const { data } = await api.fetchPosts(page);\n\n    console.log(data)\n\n    dispatch({ type: FETCH_ALL, payload: data });\n    dispatch({ type: END_LOADING })\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_SEARCH, payload: { data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}