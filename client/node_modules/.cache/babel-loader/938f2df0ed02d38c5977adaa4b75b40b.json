{"ast":null,"code":"var _jsxFileName = \"/home/emjackson/Memories_App/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const characterTextLimit = 7;\n\n  const handleChangeText = e => {\n    if (characterTextLimit - e.target.value.length >= 0) {\n      setPostData(e.target.value);\n      console.log(\"Paragraph Text: \", e.target.value);\n    }\n  };\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  }; //[\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"button\",\"overline\",\"srOnly\",\"inherit\"].\n\n\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        align: \"center\",\n        children: \"Sign In to unlock new privileges like creating and liking memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post.title}\"` : 'Create a Memory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        minRows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(','),\n          handleChangeText\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [characterTextLimit - postData.length, \" Remaining\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"outlined\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"MReIPf178/ex0D6CLEoArnfnsIk=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","createPost","updatePost","useStyles","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","characterTextLimit","handleChangeText","e","target","value","length","console","log","clear","handleSubmit","preventDefault","name","result","paper","root","form","split","fileInput","base64","buttonSubmit"],"sources":["/home/emjackson/Memories_App/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const characterTextLimit = 7\n\n  const handleChangeText = (e) => {\n    if(characterTextLimit - e.target.value.length >= 0) {\n      setPostData(e.target.value)\n      console.log(\"Paragraph Text: \",e.target.value)\n    }\n  }\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n  //[\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"button\",\"overline\",\"srOnly\",\"inherit\"].\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"subtitle1\" align=\"center\">\n          Sign In to unlock new privileges like creating and liking memories\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Create a Memory'}</Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline minRows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(','), handleChangeText })} />\n        <small>{characterTextLimit - postData.length} Remaining</small>\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"outlined\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"outlined\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}