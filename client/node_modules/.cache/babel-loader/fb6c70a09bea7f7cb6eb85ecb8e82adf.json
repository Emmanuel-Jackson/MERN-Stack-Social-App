{"ast":null,"code":"import { FETCH_ALL, FETCH_SEARCH, FETCH_POST, CREATE, UPDATE, COMMENT, DELETE } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state,\n        isLoading: true\n      };\n\n    case 'END_LOADING':\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_SEARCH:\n      return { ...state,\n        posts: action.payload.data\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload.post\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case COMMENT:\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post._id === action.payload._id) return action.payload;\n          return post; //return all of the other posts normally\n          //change the post that just received a comment\n        })\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["FETCH_ALL","FETCH_SEARCH","FETCH_POST","CREATE","UPDATE","COMMENT","DELETE","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"sources":["/home/emjackson/Memories_App/client/src/reducers/posts.js"],"sourcesContent":["import { FETCH_ALL, FETCH_SEARCH, FETCH_POST, CREATE, UPDATE, COMMENT, DELETE } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state, isLoading: true };\n    case 'END_LOADING':\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_SEARCH:\n      return { ...state, posts: action.payload.data };\n    case FETCH_POST:\n      return { ...state, post: action.payload.post };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n\n          if(post._id === action.payload._id) return action.payload\n\n          return post;\n          //return all of the other posts normally\n          //change the post that just received a comment\n        })\n      }\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state;\n  }\n};"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,UAAlC,EAA8CC,MAA9C,EAAsDC,MAAtD,EAA8DC,OAA9D,EAAuEC,MAAvE,QAAqF,0BAArF;AAEA,gBAAe,YAAoD;EAAA,IAAnDC,KAAmD,uEAA3C;IAAEC,SAAS,EAAE,IAAb;IAAmBC,KAAK,EAAE;EAA1B,CAA2C;EAAA,IAAXC,MAAW;;EACjE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,eAAL;MACE,OAAO,EAAE,GAAGJ,KAAL;QAAYC,SAAS,EAAE;MAAvB,CAAP;;IACF,KAAK,aAAL;MACE,OAAO,EAAE,GAAGD,KAAL;QAAYC,SAAS,EAAE;MAAvB,CAAP;;IACF,KAAKR,SAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELE,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFjB;QAGLC,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;QAILC,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;MAJzB,CAAP;;IAMF,KAAKd,YAAL;MACE,OAAO,EAAE,GAAGM,KAAL;QAAYE,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC;MAAlC,CAAP;;IACF,KAAKX,UAAL;MACE,OAAO,EAAE,GAAGK,KAAL;QAAYS,IAAI,EAAEN,MAAM,CAACE,OAAP,CAAeI;MAAjC,CAAP;;IACF,KAAKZ,MAAL;MACE,OAAO,EAAE,GAAGG,KAAL;QAAYE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;MAAnB,CAAP;;IACF,KAAKX,OAAL;MACE,OAAO,EACL,GAAGE,KADE;QAELE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAU;UAE/B,IAAGA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA/B,EAAoC,OAAOR,MAAM,CAACE,OAAd;UAEpC,OAAOI,IAAP,CAJ+B,CAK/B;UACA;QACD,CAPM;MAFF,CAAP;;IAWF,KAAKb,MAAL;MACE,OAAO,EAAE,GAAGI,KAAL;QAAYE,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;MAAnB,CAAP;;IACF,KAAKR,MAAL;MACE,OAAO,EAAE,GAAGG,KAAL;QAAYE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;MAAnB,CAAP;;IACF,KAAKV,MAAL;MACE,OAAO,EAAE,GAAGC,KAAL;QAAYE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;MAAnB,CAAP;;IACF;MACE,OAAOL,KAAP;EArCJ;AAuCD,CAxCD"},"metadata":{},"sourceType":"module"}